/* 테스트 유닛 */
CREATE TABLE BXT_TEST_UNIT (
	TEST_UNIT_UID VARCHAR2(32) NOT NULL, /* 테스트 유닛 UID */
	CALLER_TEST_UNIT_UID VARCHAR2(32) NOT NULL, /* 호출자 테스트 유닛 UID */
	TEST_UNIT_NM VARCHAR2(1000), /* 테스트 유닛 명 */
	ROOT_TEST_UNIT_UID VARCHAR2(32) NOT NULL, /* 루트테스트유닛UID */
	RESULT_CD VARCHAR2(1) NOT NULL, /* 결과 코드 */
	OBJECT_HASH_ID VARCHAR2(128), /* 오브젝트 해쉬ID */
	OBJECT_RCD_TRG_YN VARCHAR2(1), /* 오브젝트레코딩대상여부 */
	EXCEPTION_TEST_UNIT_UID VARCHAR2(32), /* 익셉션 테스트 유닛 UID */
	SYS_ID VARCHAR2(16) NOT NULL, /* 시스템 ID */
	CLASS_ID VARCHAR2(64) NOT NULL, /* 클래스ID */
	METHOD_ID VARCHAR2(32) NOT NULL, /* 메소드ID */
	METHOD_VER_HASH_ID VARCHAR2(128) NOT NULL, /* 메소드 버전 해쉬ID */
	CALLER_CLASS_ID VARCHAR2(64), /* 호출자 클래스ID */
	CALLER_METHOD_ID VARCHAR2(32), /* 호출자 메소드ID */
	CALLER_METHOD_VER_HASH_ID VARCHAR2(128), /* 호출자 메소드 버전 해쉬ID */
	METHOD_CALL_CNT NUMBER(8), /* 메소드 호출 건수 */
	CST_01_FIELD_VAL VARCHAR2(50), /* 커스텀 01 필드 값 */
	CST_02_FIELD_VAL VARCHAR2(50), /* 커스텀 02 필드 값 */
	CST_03_FIELD_VAL VARCHAR2(50), /* 커스텀 03 필드 값 */
	CST_04_FIELD_VAL VARCHAR2(50), /* 커스텀 04 필드 값 */
	BASE_DATE VARCHAR2(8) NOT NULL, /* 기준일자 */
	BEGIN_DTTM VARCHAR2(23), /* 시작 일시 */
	END_DTTM VARCHAR2(23), /* 종료 일시 */
	ELAPSED_SEC NUMBER(8), /* 경과시간 초 */
	NANO_TIME NUMBER(19), /* 나노타임 */
	STATS_PROC_YN VARCHAR2(1) NOT NULL, /* 통계처리여부 */
	AGENT_ID VARCHAR2(32), /* AGENT ID */
	PROC_ID VARCHAR2(16), /* 프로세스ID */
	THREAD_NM VARCHAR2(1000), /* 쓰레드 명 */
	AGENT_CD VARCHAR2(1), /* AGENT 코드 */
	NRM_PROC_CNT NUMBER(8), /* 정상처리건수 */
	ERR_PROC_CNT NUMBER(8), /* 오류처리건수 */
	RECURS_PROC_CNT NUMBER(8) /* 재귀처리건수 */
)PARTITION BY RANGE ( BASE_DATE ) 
(
  PARTITION BXT_TEST_UNIT_201603 VALUES LESS THAN ('20160399')
,  PARTITION BXT_TEST_UNIT_201604 VALUES LESS THAN ('20160499')
,  PARTITION BXT_TEST_UNIT_201605 VALUES LESS THAN ('20160599')
,  PARTITION BXT_TEST_UNIT_201606 VALUES LESS THAN ('20160699')
,  PARTITION BXT_TEST_UNIT_201607 VALUES LESS THAN ('20160799')
,  PARTITION BXT_TEST_UNIT_201608 VALUES LESS THAN ('20160899')
,  PARTITION BXT_TEST_UNIT_201609 VALUES LESS THAN ('20160999')
,  PARTITION BXT_TEST_UNIT_201610 VALUES LESS THAN ('20161099')
,  PARTITION BXT_TEST_UNIT_201611 VALUES LESS THAN ('20161199')
,  PARTITION BXT_TEST_UNIT_201612 VALUES LESS THAN ('20161299')
,  PARTITION BXT_TEST_UNIT_201701 VALUES LESS THAN ('20170199')
,  PARTITION BXT_TEST_UNIT_201702 VALUES LESS THAN ('20170299')
);

COMMENT ON TABLE BXT_TEST_UNIT IS '테스트 유닛';
COMMENT ON COLUMN BXT_TEST_UNIT.TEST_UNIT_UID IS '테스트 유닛 UID';
COMMENT ON COLUMN BXT_TEST_UNIT.CALLER_TEST_UNIT_UID IS '호출자 테스트 유닛 UID';
COMMENT ON COLUMN BXT_TEST_UNIT.TEST_UNIT_NM IS '테스트 유닛 명';
COMMENT ON COLUMN BXT_TEST_UNIT.ROOT_TEST_UNIT_UID IS '루트테스트유닛UID';
COMMENT ON COLUMN BXT_TEST_UNIT.RESULT_CD IS '결과 코드';
COMMENT ON COLUMN BXT_TEST_UNIT.OBJECT_HASH_ID IS '오브젝트 해쉬ID';
COMMENT ON COLUMN BXT_TEST_UNIT.OBJECT_RCD_TRG_YN IS '오브젝트레코딩대상여부';
COMMENT ON COLUMN BXT_TEST_UNIT.EXCEPTION_TEST_UNIT_UID IS '익셉션 테스트 유닛 UID';
COMMENT ON COLUMN BXT_TEST_UNIT.SYS_ID IS '시스템 ID';
COMMENT ON COLUMN BXT_TEST_UNIT.CLASS_ID IS '클래스ID';
COMMENT ON COLUMN BXT_TEST_UNIT.METHOD_ID IS '메소드ID';
COMMENT ON COLUMN BXT_TEST_UNIT.METHOD_VER_HASH_ID IS '메소드 버전 해쉬ID';
COMMENT ON COLUMN BXT_TEST_UNIT.CALLER_CLASS_ID IS '호출자 클래스ID';
COMMENT ON COLUMN BXT_TEST_UNIT.CALLER_METHOD_ID IS '호출자 메소드ID';
COMMENT ON COLUMN BXT_TEST_UNIT.CALLER_METHOD_VER_HASH_ID IS '호출자 메소드 버전 해쉬ID';
COMMENT ON COLUMN BXT_TEST_UNIT.METHOD_CALL_CNT IS '메소드 호출 건수';
COMMENT ON COLUMN BXT_TEST_UNIT.CST_01_FIELD_VAL IS '커스텀 01 필드 값';
COMMENT ON COLUMN BXT_TEST_UNIT.CST_02_FIELD_VAL IS '커스텀 02 필드 값';
COMMENT ON COLUMN BXT_TEST_UNIT.CST_03_FIELD_VAL IS '커스텀 03 필드 값';
COMMENT ON COLUMN BXT_TEST_UNIT.CST_04_FIELD_VAL IS '커스텀 04 필드 값';
COMMENT ON COLUMN BXT_TEST_UNIT.BASE_DATE IS '기준일자';
COMMENT ON COLUMN BXT_TEST_UNIT.BEGIN_DTTM IS '시작 일시';
COMMENT ON COLUMN BXT_TEST_UNIT.END_DTTM IS '종료 일시';
COMMENT ON COLUMN BXT_TEST_UNIT.ELAPSED_SEC IS '경과시간 초';
COMMENT ON COLUMN BXT_TEST_UNIT.NANO_TIME IS '나노타임';
COMMENT ON COLUMN BXT_TEST_UNIT.STATS_PROC_YN IS '통계처리여부';
COMMENT ON COLUMN BXT_TEST_UNIT.AGENT_ID IS 'AGENT ID';
COMMENT ON COLUMN BXT_TEST_UNIT.PROC_ID IS '프로세스ID';
COMMENT ON COLUMN BXT_TEST_UNIT.THREAD_NM IS '쓰레드 명';
COMMENT ON COLUMN BXT_TEST_UNIT.AGENT_CD IS 'AGENT 코드';
COMMENT ON COLUMN BXT_TEST_UNIT.NRM_PROC_CNT IS '정상처리건수';
COMMENT ON COLUMN BXT_TEST_UNIT.ERR_PROC_CNT IS '오류처리건수';
COMMENT ON COLUMN BXT_TEST_UNIT.RECURS_PROC_CNT IS '재귀처리건수';

CREATE UNIQUE INDEX PK_BXT_TEST_UNIT
	ON BXT_TEST_UNIT (
		TEST_UNIT_UID ASC
	);

CREATE INDEX IX_BXT_TEST_UNIT_01
	ON BXT_TEST_UNIT (
		BEGIN_DTTM ASC,
		RESULT_CD ASC,
		CLASS_ID ASC
	);

CREATE INDEX IX_BXT_TEST_UNIT_02
	ON BXT_TEST_UNIT (
		ROOT_TEST_UNIT_UID ASC,
		CALLER_TEST_UNIT_UID ASC
	);

CREATE INDEX IX_BXT_TEST_UNIT_03
	ON BXT_TEST_UNIT (
		BASE_DATE ASC,
		STATS_PROC_YN ASC,
		BEGIN_DTTM ASC
	);

ALTER TABLE BXT_TEST_UNIT
	ADD
		CONSTRAINT PK_BXT_TEST_UNIT
		PRIMARY KEY (
			TEST_UNIT_UID
		);

/* 테스트 유닛 실행라인 */
CREATE TABLE BXT_TEST_UNIT_EXEC_LINE (
	TEST_UNIT_UID VARCHAR2(32) NOT NULL, /* 테스트 유닛 UID */
	SEQ NUMBER(8) NOT NULL, /* 일련번호 */
	SYS_ID VARCHAR2(16) NOT NULL, /* 시스템 ID */
	LINE_DATA VARCHAR2(4000), /* 라인 데이터 */
	BASE_DATE VARCHAR2(8) NOT NULL, /* 기준일자 */
	REG_DTTM VARCHAR2(23) NOT NULL /* 등록 일시 */
)PARTITION BY RANGE ( BASE_DATE ) 
(
  
   PARTITION BXT_TEST_UNIT_EXEC_LINE_201603 VALUES LESS THAN ('20160399')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201604 VALUES LESS THAN ('20160499')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201605 VALUES LESS THAN ('20160599')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201606 VALUES LESS THAN ('20160699')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201607 VALUES LESS THAN ('20160799')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201608 VALUES LESS THAN ('20160899')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201609 VALUES LESS THAN ('20160999')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201610 VALUES LESS THAN ('20161099')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201611 VALUES LESS THAN ('20161199')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201612 VALUES LESS THAN ('20161299')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201701 VALUES LESS THAN ('20170199')
,  PARTITION BXT_TEST_UNIT_EXEC_LINE_201702 VALUES LESS THAN ('20170299')
);

COMMENT ON TABLE BXT_TEST_UNIT_EXEC_LINE IS '테스트 유닛 실행라인';
COMMENT ON COLUMN BXT_TEST_UNIT_EXEC_LINE.TEST_UNIT_UID IS '테스트 유닛 UID';
COMMENT ON COLUMN BXT_TEST_UNIT_EXEC_LINE.SEQ IS '일련번호';
COMMENT ON COLUMN BXT_TEST_UNIT_EXEC_LINE.SYS_ID IS '시스템 ID';
COMMENT ON COLUMN BXT_TEST_UNIT_EXEC_LINE.LINE_DATA IS '라인 데이터';
COMMENT ON COLUMN BXT_TEST_UNIT_EXEC_LINE.BASE_DATE IS '기준일자';
COMMENT ON COLUMN BXT_TEST_UNIT_EXEC_LINE.REG_DTTM IS '등록 일시';

CREATE UNIQUE INDEX PK_BXT_TEST_UNIT_EXEC_LINE
	ON BXT_TEST_UNIT_EXEC_LINE (
		TEST_UNIT_UID ASC,
		SEQ ASC
	);

ALTER TABLE BXT_TEST_UNIT_EXEC_LINE
	ADD
		CONSTRAINT PK_BXT_TEST_UNIT_EXEC_LINE
		PRIMARY KEY (
			TEST_UNIT_UID,
			SEQ
		);

/* 테스트 유닛 오브젝트 */
CREATE TABLE BXT_TEST_UNIT_OBJECT (
	TEST_UNIT_UID VARCHAR2(32) NOT NULL, /* 테스트 유닛 UID */
	OBJECT_CD VARCHAR2(1) NOT NULL, /* 오브젝트 코드 */
	OBJECT_SEQ NUMBER(8) NOT NULL, /* 오브젝트 순번 */
	SYS_ID VARCHAR2(16) NOT NULL, /* 시스템 ID */
	OBJECT_QN VARCHAR2(1000), /* 오브젝트 퀄리파이드네임 */
	SIZE_EXCEED_YN VARCHAR2(1), /* 사이즈 초과 여부 */
	OBJECT_DATA BLOB, /* 오브젝트데이터 */
	BASE_DATE VARCHAR2(8) NOT NULL, /* 기준일자 */
	REG_DTTM VARCHAR2(23) NOT NULL /* 등록 일시 */
)PARTITION BY RANGE ( BASE_DATE ) 
(
  
   PARTITION BXT_TEST_UNIT_OBJECT_201603 VALUES LESS THAN ('20160399')
,  PARTITION BXT_TEST_UNIT_OBJECT_201604 VALUES LESS THAN ('20160499')
,  PARTITION BXT_TEST_UNIT_OBJECT_201605 VALUES LESS THAN ('20160599')
,  PARTITION BXT_TEST_UNIT_OBJECT_201606 VALUES LESS THAN ('20160699')
,  PARTITION BXT_TEST_UNIT_OBJECT_201607 VALUES LESS THAN ('20160799')
,  PARTITION BXT_TEST_UNIT_OBJECT_201608 VALUES LESS THAN ('20160899')
,  PARTITION BXT_TEST_UNIT_OBJECT_201609 VALUES LESS THAN ('20160999')
,  PARTITION BXT_TEST_UNIT_OBJECT_201610 VALUES LESS THAN ('20161099')
,  PARTITION BXT_TEST_UNIT_OBJECT_201611 VALUES LESS THAN ('20161199')
,  PARTITION BXT_TEST_UNIT_OBJECT_201612 VALUES LESS THAN ('20161299')
,  PARTITION BXT_TEST_UNIT_OBJECT_201701 VALUES LESS THAN ('20170199')
,  PARTITION BXT_TEST_UNIT_OBJECT_201702 VALUES LESS THAN ('20170299')
);

COMMENT ON TABLE BXT_TEST_UNIT_OBJECT IS '테스트 유닛 오브젝트';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.TEST_UNIT_UID IS '테스트 유닛 UID';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.OBJECT_CD IS '오브젝트 코드';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.OBJECT_SEQ IS '오브젝트 순번';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.SYS_ID IS '시스템 ID';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.OBJECT_QN IS '오브젝트 퀄리파이드네임';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.SIZE_EXCEED_YN IS '사이즈 초과 여부';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.OBJECT_DATA IS '오브젝트데이터';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.BASE_DATE IS '기준일자';
COMMENT ON COLUMN BXT_TEST_UNIT_OBJECT.REG_DTTM IS '등록 일시';

CREATE UNIQUE INDEX PK_BXT_TEST_UNIT_OBJECT
	ON BXT_TEST_UNIT_OBJECT (
		TEST_UNIT_UID ASC,
		OBJECT_CD ASC,
		OBJECT_SEQ ASC
	);

ALTER TABLE BXT_TEST_UNIT_OBJECT
	ADD
		CONSTRAINT PK_BXT_TEST_UNIT_OBJECT
		PRIMARY KEY (
			TEST_UNIT_UID,
			OBJECT_CD,
			OBJECT_SEQ
		);

/* 테스트 유닛 익셉션 오브젝트 */
CREATE TABLE BXT_TEST_UNIT_EXCEPTION (
	TEST_UNIT_UID VARCHAR2(32) NOT NULL, /* 테스트 유닛 UID */
	SYS_ID VARCHAR2(16) NOT NULL, /* 시스템 ID */
	EXCEPTION_QN VARCHAR2(1000) NOT NULL, /* 익셉션 퀄리파이드네임 */
	CATCH_YN VARCHAR2(1) NOT NULL, /* CATCH 여부 */
	EXCEPTION_MSG VARCHAR2(4000), /* 익셉션 메시지 */
	OBJECT_DATA BLOB, /* 오브젝트데이터 */
	BASE_DATE VARCHAR2(8) NOT NULL, /* 기준일자 */
	REG_DTTM VARCHAR2(23) NOT NULL /* 등록 일시 */
)PARTITION BY RANGE ( BASE_DATE ) 
(
 PARTITION BXT_TEST_UNIT_EXCEPTION_201603 VALUES LESS THAN ('20160399')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201604 VALUES LESS THAN ('20160499')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201605 VALUES LESS THAN ('20160599')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201606 VALUES LESS THAN ('20160699')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201607 VALUES LESS THAN ('20160799')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201608 VALUES LESS THAN ('20160899')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201609 VALUES LESS THAN ('20160999')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201610 VALUES LESS THAN ('20161099')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201611 VALUES LESS THAN ('20161199')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201612 VALUES LESS THAN ('20161299')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201701 VALUES LESS THAN ('20170199')
,  PARTITION BXT_TEST_UNIT_EXCEPTION_201702 VALUES LESS THAN ('20170299')
);

COMMENT ON TABLE BXT_TEST_UNIT_EXCEPTION IS '테스트 유닛 익셉션 오브젝트';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.TEST_UNIT_UID IS '테스트 유닛 UID';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.SYS_ID IS '시스템 ID';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.EXCEPTION_QN IS '익셉션 퀄리파이드네임';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.CATCH_YN IS 'CATCH 여부';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.EXCEPTION_MSG IS '익셉션 메시지';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.OBJECT_DATA IS '오브젝트데이터';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.BASE_DATE IS '기준일자';
COMMENT ON COLUMN BXT_TEST_UNIT_EXCEPTION.REG_DTTM IS '등록 일시';

CREATE UNIQUE INDEX PK_BXT_TEST_UNIT_EXCEPTION
	ON BXT_TEST_UNIT_EXCEPTION (
		TEST_UNIT_UID ASC
	);

ALTER TABLE BXT_TEST_UNIT_EXCEPTION
	ADD
		CONSTRAINT PK_BXT_TEST_UNIT_EXCEPTION
		PRIMARY KEY (
			TEST_UNIT_UID
		);